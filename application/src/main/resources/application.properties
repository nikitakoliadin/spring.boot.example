# Base Properties
system.type=test
# Docker Properties
docker.image.name.file.path=/etc/hostname
# Logger Properties
logging.level.com.qthegamep.application=INFO
root.logger.level=INFO
root.logger.file.enable=false
root.logger.file.name=FILE
root.logger.file.path=/opt/logs/log/spring.boot.example.application-{}.log
root.logger.file.appender=true
root.logger.file.name.pattern=/opt/logs/log/arch/spring.boot.example.application-{}_%d{yyyy-MM-dd}.%i.log.gz
root.logger.file.max.file.size=1GB
root.logger.file.max.history=90
root.logger.file.total.size.cap=3GB
root.logger.file.pattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${PID:- } --- [%15.15t] %-40.40logger{39} : %m%n%wEx
# Application Properties
spring.application.name=application
server.port=8081
# Application Server Properties
server.tomcat.threads.max=32
server.tomcat.threads.min-spare=32
server.tomcat.connection-timeout=30000
server.tomcat.keep-alive-timeout=30000
# Shutdown Hook Properties
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=1m
# Error Properties
server.error.whitelabel.enabled=false
server.error.path=/error
# Spring Boot Actuator Properties
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
# Spring Boot Security Properties
spring.security.user.name=client
spring.security.user.password=client
# Spring Boot Admin Properties
spring.boot.admin.client.url=http://localhost:8082
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin
spring.boot.admin.client.instance.metadata.user.name=${spring.security.user.name}
spring.boot.admin.client.instance.metadata.user.password=${spring.security.user.password}
spring.boot.admin.client.instance.management-base-url=https://localhost:${server.port}
spring.boot.admin.client.instance.management-url=${spring.boot.admin.client.instance.management-base-url}/actuator
spring.boot.admin.client.instance.health-url=${spring.boot.admin.client.instance.management-base-url}/actuator/health
spring.boot.admin.client.instance.service-url=${spring.boot.admin.client.instance.management-base-url}
# Spring Cloud Properties
spring.config.import=optional:configserver:http://localhost:8083
# TLS Properties
server.ssl.enabled=true
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:keystore/keystore.p12
server.ssl.key-store-password=password
server.ssl.protocol=TLS
server.ssl.enabled-protocols=TLSv1.2
# MongoDB Properties
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=spring-boot-example
spring.data.mongodb.auto-index-creation=true
# Runtime Properties
server.ip=
docker.image.name=
